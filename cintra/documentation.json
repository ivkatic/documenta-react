{
    "postcss.config.js": "Description: This file is responsible for configuring the PostCSS plugins used in the application.\n\nDependencies: postcss-import, tailwindcss, autoprefixer\n\nFunctions:\n- None",
    "public/index.html": "Description: This file is an HTML document that serves as the main entry point for the application.\nDependencies: None\nFunctions: None",
    "src/app.js": "Description: This file is responsible for rendering the main application and managing the loading page.\n\nDependencies: \n- React: The main library for building user interfaces.\n- ReactDOM: The package for rendering React components into the DOM.\n- AppRouter: The router component for handling the application's routing.\n- history: The history object used by the AppRouter.\n- normalize.css: A CSS reset stylesheet.\n- app.scss: The main SCSS file for styling the application.\n- LoadingPage: The component for displaying a loading page.\n\nFunctions:\n- Name: renderApp\n  Description: Renders the AppRouter component and hides the loader element.\n  Parameters: None\n  Returns: None\n\n- Name: renderApp\n  Description: Renders the LoadingPage component.\n  Parameters: None\n  Returns: None",
    "src/components/Article.js": "Description: This file is a React component that renders an article with its associated information, such as title, thumbnail, categories, excerpt, and date.\n\nDependencies: React, react-router-dom\n\nFunctions:\n- Name: Article\n  Description: This function is a React functional component that renders the article content.\n  Parameters: props (object) - The properties passed to the component, including item (object) - The article data, locale (string) - The locale of the article.\n  Returns: JSX - The rendered article component.",
    "src/components/Category.js": "Description: This file is a React component that represents a category page in the application.\n\nDependencies: \n- React: The main library for building user interfaces in React.\n- react-router-dom: A library for handling routing in React applications.\n- WP_API: A custom module for making API requests to a WordPress backend.\n- Sidebar: A component that displays a sidebar on the category page.\n- Article: A component that displays an article on the category page.\n- PageHeader: A component that displays the page header on the category page.\n- LoadingPage: A component that displays a loading page while data is being fetched.\n- Standard: A component that displays a standard layout for the category page.\n\nFunctions:\n- Name: constructor\n  Description: Initializes the state of the Category component.\n  Parameters: props (object) - The props passed to the Category component.\n  Returns: None\n\n- Name: componentWillMount\n  Description: Executes before the component is mounted. Calls the getArticles function to fetch articles.\n  Parameters: None\n  Returns: None\n\n- Name: componentDidUpdate\n  Description: Executes after the component is updated. Calls the getArticles function if the per_page state has changed.\n  Parameters: prevProps (object) - The previous props of the component, prevState (object) - The previous state of the component.\n  Returns: None\n\n- Name: getArticles\n  Description: Fetches articles from the WordPress API based on the category slug and locale.\n  Parameters: None\n  Returns: None\n\n- Name: loadMore\n  Description: Updates the per_page state to load more articles.\n  Parameters: None\n  Returns: None\n\n- Name: render\n  Description: Renders the Category component.\n  Parameters: None\n  Returns: JSX - The JSX representation of the Category component.",
    "src/components/Footer.js": "Description: This file contains the code for the Footer component, which is responsible for rendering the footer section of the application.\n\nDependencies: React\n\nFunctions:\n- Name: Footer\n  Description: Renders the footer section of the application.\n  Parameters: None\n  Returns: JSX element - The rendered footer component.",
    "src/components/Frontpage.js": "Description: This file represents the frontpage component of the application, responsible for rendering the main content and sidebar on the frontpage.\n\nDependencies: \n- React and Component from 'react'\n- Link from 'react-router-dom'\n- WP_API from '../data/Api'\n- Sidebar from '../views/partials/Sidebar'\n- Article from './Article'\n- LoadingPage from './LoadingPage'\n- Standard from '../views/Standard'\n\nFunctions:\n- Name: constructor\n  Description: Initializes the state of the component.\n  Parameters: props (object) - The props passed to the component.\n  Returns: None\n\n- Name: componentWillMount\n  Description: Executes before the component is mounted, checks if searchString is empty or has changed, and calls getArticles function accordingly.\n  Parameters: None\n  Returns: None\n\n- Name: componentDidUpdate\n  Description: Executes after the component is updated, checks if per_page state has changed, and calls getArticles function accordingly.\n  Parameters: prevProps (object) - The previous props of the component, prevState (object) - The previous state of the component.\n  Returns: None\n\n- Name: getArticles\n  Description: Retrieves articles from the API based on per_page and searchString, updates the state with the retrieved data, and stores the data in localStorage.\n  Parameters: None\n  Returns: None\n\n- Name: loadMore\n  Description: Updates the state to load more articles.\n  Parameters: None\n  Returns: None\n\n- Name: render\n  Description: Renders the main content and sidebar on the frontpage based on the state.\n  Parameters: None\n  Returns: JSX element",
    "src/components/Header.js": "Description: This file represents the header component of the application, responsible for rendering the header section of the website.\n\nDependencies: \n- React: The main library for building user interfaces in the application.\n- Nav: A custom component for rendering the navigation menu.\n- useHistory: A hook from the react-router-dom library for accessing the browser history object.\n- withRouter: A higher-order component from the react-router-dom library for passing the updated match, location, and history props to the wrapped component.\n- Link: A component from the react-router-dom library for creating links to different routes in the application.\n\nFunctions:\n- Name: constructor\n  Description: Initializes the state of the Header component.\n  Parameters: props (object) - The props passed to the Header component.\n  Returns: None\n\n- Name: onFieldChange\n  Description: Handles the change event of the search input field and triggers a search after a delay.\n  Parameters: event (object) - The event object containing information about the input field.\n  Returns: None\n\n- Name: openSearch\n  Description: Toggles the formActive state to show or hide the search input field.\n  Parameters: e (object) - The event object.\n  Returns: None\n\n- Name: mobileTrigger\n  Description: Toggles the mobileMenuActive state to show or hide the mobile menu and adds or removes the 'mobile-active' class from the document element.\n  Parameters: e (object) - The event object.\n  Returns: None\n\n- Name: languageSwitched\n  Description: Handles the language switch event and updates the activeLang state and the localStorage.\n  Parameters: e (object) - The event object, lng (string) - The new language, link (string) - The link to navigate to.\n  Returns: None\n\n- Name: render\n  Description: Renders the header component.\n  Parameters: None\n  Returns: The JSX representation of the header component.",
    "src/components/LoadingPage.js": "Description: This file represents a React component for a loading page.\nDependencies: React\nFunctions: N/A",
    "src/components/Nav.js": "Description: This file is responsible for rendering the navigation menu component in the application.\n\nDependencies: \n- React: The main library for building user interfaces in React.\n- Component: A class component from the React library.\n- Link: A component from the react-router-dom library used for creating links.\n- NavLink: A component from the react-router-dom library used for creating links with active styling.\n- WP_API: A custom module for making API requests.\n\nFunctions:\n- Name: constructor\n  Description: Initializes the state of the Nav component and calls the getMenu function.\n  Parameters: props (object) - The props passed to the Nav component.\n  Returns: None\n\n- Name: getMenu\n  Description: Retrieves the menu data from the API and updates the state with the result.\n  Parameters: None\n  Returns: None\n\n- Name: componentDidUpdate\n  Description: Checks if the locale prop has changed and calls the getMenu function if it has.\n  Parameters: prevProps (object) - The previous props, prevState (object) - The previous state, snapshot (object) - The previous snapshot.\n  Returns: None\n\n- Name: render\n  Description: Renders the navigation menu component based on the state data.\n  Parameters: None\n  Returns: JSX element - The rendered navigation menu component.",
    "src/components/News.js": "Description: This file represents the News component in the application, responsible for displaying news articles and a sidebar.\nDependencies: React, react-router-dom, WP_API, Sidebar, Article\nFunctions:\n- Name: constructor\n  Description: Initializes the state of the News component with per_page and posts properties.\n  Parameters: props (object) - The props passed to the component.\n  Returns: None\n\n- Name: componentWillMount\n  Description: Executes the getArticles function before the component is mounted.\n  Parameters: None\n  Returns: None\n\n- Name: componentDidUpdate\n  Description: Executes the getArticles function if the per_page state has changed.\n  Parameters: prevProps (object) - The previous props, prevState (object) - The previous state.\n  Returns: None\n\n- Name: getArticles\n  Description: Retrieves news articles from the WP_API and updates the posts state.\n  Parameters: None\n  Returns: None\n\n- Name: loadMore\n  Description: Increases the per_page state by 10.\n  Parameters: None\n  Returns: None\n\n- Name: render\n  Description: Renders the News component with the news articles and a sidebar.\n  Parameters: None\n  Returns: JSX element",
    "src/components/NotFoundPage.js": "Description: This file is responsible for rendering the NotFoundPage component, which is displayed when a user navigates to a non-existent page.\nDependencies: React, react-router-dom, Standard component\nFunctions:\n- Name: NotFoundPage\n  Description: Renders the NotFoundPage component with a title of '404' and content of 'Ooops Not Found'.\n  Parameters: None\n  Returns: JSX element - The rendered NotFoundPage component.",
    "src/components/Page.js": "Description: This file is responsible for rendering and managing the content of a page in the application.\n\nDependencies: \n- React and Component from 'react'\n- withRouter from 'react-router-dom'\n- WP_API from '../data/Api'\n- Standard from '../views/Standard'\n- NoSidebar from '../views/NoSidebar'\n- LoadingPage from './LoadingPage'\n\nFunctions:\n- Name: componentWillMount\n  Description: Retrieves the data for the current page from the API and updates the component's state with the retrieved data.\n  Parameters: None\n  Returns: None\n\n- Name: createMarkup\n  Description: Creates a markup object with the provided HTML.\n  Parameters: html (string) - The HTML to be marked up.\n  Returns: Object - A markup object with the provided HTML.\n\n- Name: render\n  Description: Renders the content of the page based on the retrieved data.\n  Parameters: None\n  Returns: JSX - The rendered content of the page.",
    "src/components/Post.js": "Description: This file is responsible for rendering and managing the display of a single post on the website.\n\nDependencies: \n- React: The main library for building user interfaces in JavaScript.\n- react-router-dom: A library that provides routing capabilities for React applications.\n- WP_API: A custom module that handles API requests to retrieve post data.\n- Standard: A view component that renders the standard layout for a post.\n- LoadingPage: A component that displays a loading indicator while the post data is being fetched.\n\nFunctions:\n- Name: constructor\n  Description: Initializes the state of the Post component.\n  Parameters: props (object) - The properties passed to the component.\n  Returns: None\n\n- Name: componentWillMount\n  Description: Executes before the component is rendered and fetches the post data from the API.\n  Parameters: None\n  Returns: None\n\n- Name: createMarkup\n  Description: Creates a markup object for rendering HTML content.\n  Parameters: html (string) - The HTML content to be rendered.\n  Returns: Object - The markup object.\n\n- Name: render\n  Description: Renders the component based on the state of the post data.\n  Parameters: None\n  Returns: JSX - The JSX representation of the component.",
    "src/components/Program.js": "Description: This file is a React component that represents a program page in the application.\n\nDependencies: \n- React: The main library for building user interfaces in React.\n- Component: A class that React components can extend to inherit basic functionality.\n- WP_API: A module that handles API requests to a WordPress backend.\n- Standard: A view component that displays standard content.\n- NotFoundPage: A component that displays a \"404 Not Found\" page.\n- LoadingBar: A component that displays a loading bar.\n\nFunctions:\n- Name: constructor\n  Description: Initializes the state of the component.\n  Parameters: props (object) - The properties passed to the component.\n  Returns: None\n\n- Name: componentWillMount\n  Description: Executes before the component is mounted.\n  Parameters: None\n  Returns: None\n\n- Name: createMarkup\n  Description: Creates a markup object for rendering HTML content.\n  Parameters: html (string) - The HTML content to be rendered.\n  Returns: Object - The markup object.\n\n- Name: render\n  Description: Renders the component.\n  Parameters: None\n  Returns: JSX - The JSX code representing the component's UI.",
    "src/components/Programs.js": "Description: This file is a React component that renders the \"Programs\" section of the application.\n\nDependencies: React\n\nFunctions:\n- Name: Programs\n  Description: This is a functional component that renders a div with the text \"Programs\".\n  Parameters: None\n  Returns: JSX element - The div element containing the text \"Programs\".\n",
    "src/data/Api.js": "Description: This file is responsible for making API requests to a WordPress API endpoint.\n\nDependencies: The file depends on the 'axios' and 'lscache' libraries.\n\nFunctions:\n- Name: constructor\n  Description: Initializes the WP_API class and sets the API URL.\n  Parameters: None\n  Returns: None\n\n- Name: get\n  Description: Sends a GET request to the specified API endpoint and retrieves data. It also caches the response for a specified amount of time.\n  Parameters: \n    - type (string) - The type of data to retrieve.\n    - data (object) - Additional parameters to include in the request.\n    - byPassCache (boolean) - Flag to bypass the cache and always fetch data from the API.\n    - byPassCacheSave (boolean) - Flag to bypass saving the response in the cache.\n  Returns: The retrieved data from the API.\n\n- Name: set\n  Description: Sends a POST request to the specified API endpoint to update data.\n  Parameters: \n    - type (string) - The type of data to update.\n    - id (string) - The ID of the data to update.\n    - dataToUpdate (object) - The data to update.\n  Returns: The response data from the API.\n\n- Name: delete\n  Description: Sends a POST request to the specified API endpoint to delete data.\n  Parameters: \n    - type (string) - The type of data to delete.\n    - id (string) - The ID of the data to delete.\n  Returns: The response data from the API.\n\nNote: There is a commented out 'get' function in the code that is not being used.",
    "src/helpers/IdentifyComponent.js": "Description: This file is responsible for identifying the component to be rendered based on the slug provided in the URL.\n\nDependencies: React, Component from 'react', NotFoundPage from '../components/NotFoundPage', Page from '../components/Page', Post from '../components/Post', Category from '../components/Category', WP_API from '../data/Api'.\n\nFunctions:\n- Name: IdentifyComponent\n  Description: The main class component that handles the identification and rendering of the appropriate component based on the slug.\n  Parameters: props (object) - The properties passed to the component.\n  Returns: None\n\n- Name: componentDidMount\n  Description: Executes after the component has been mounted and fetches the component to be rendered based on the slug.\n  Parameters: None\n  Returns: None\n\n- Name: render\n  Description: Renders the identified component or the NotFoundPage component if no component is found.\n  Parameters: None\n  Returns: The identified component or the NotFoundPage component.",
    "src/helpers/MagnificPopup.js": "Description: This file contains the code for the MagnificPopup class, which is responsible for initializing and configuring the MagnificPopup lightbox plugin.\n\nDependencies: jQuery, MagnificPopup library\n\nFunctions:\n- Name: code\n  Description: Initializes and configures the MagnificPopup lightbox plugin for images.\n  Parameters: None\n  Returns: None",
    "src/helpers/WPCF7.js": "Description: This file contains the class WPCF7, which is responsible for initializing and managing the functionality of the WPCF7 plugin.\n\nDependencies: jQuery, document\n\nFunctions:\n- Name: code\n  Description: Initializes the WPCF7 plugin by extending the wpcf7 object with additional properties and functions, and setting up event listeners for form submission and other interactions.\n  Parameters: None\n  Returns: None\n\n- Name: supportHtml5\n  Description: Determines the HTML5 support for various input types and features.\n  Parameters: None\n  Returns: features (object) - An object containing the HTML5 support status for different input types and features.\n\n- Name: initForm\n  Description: Initializes a form by setting up event listeners for form submission, input changes, and other interactions.\n  Parameters: form (object) - The form element to be initialized.\n  Returns: None\n\n- Name: getId\n  Description: Retrieves the ID of a form.\n  Parameters: form (object) - The form element.\n  Returns: id (int) - The ID of the form.\n\n- Name: submit\n  Description: Submits a form via AJAX, handling the form data and triggering appropriate events based on the response.\n  Parameters: form (object) - The form element to be submitted.\n  Returns: None\n\n- Name: triggerEvent\n  Description: Triggers a custom event on a target element, both as a DOM event and a jQuery event.\n  Parameters: target (object) - The target element, name (string) - The name of the event, detail (object) - Additional data to be passed with the event.\n  Returns: None\n\n- Name: toggleSubmit\n  Description: Toggles the disabled state of the submit button based on the form's acceptance checkboxes.\n  Parameters: form (object) - The form element, state (boolean, optional) - The desired state of the submit button.\n  Returns: None\n\n- Name: notValidTip\n  Description: Displays a validation error message for an input field.\n  Parameters: target (object) - The target input field, message (string) - The error message.\n  Returns: None\n\n- Name: refill\n  Description: Refills the form with previously entered data, such as captchas and quiz answers.\n  Parameters: form (object) - The form element, data (object, optional) - The data to be refilled.\n  Returns: None\n\n- Name: clearResponse\n  Description: Clears the response message and resets the form's state after submission.\n  Parameters: form (object) - The form element.\n  Returns: None\n\n- Name: apiSettings.getRoute\n  Description: Constructs the API route for a given path.\n  Parameters: path (string) - The path to be appended to the API root.\n  Returns: url (string) - The complete API route.",
    "src/routers/AppRouter.js": "Description: This file is responsible for managing the routing and navigation of the application using React Router.\n\nDependencies: React, react-router-dom, history/createBrowserHistory, Frontpage, Programs, NotFoundPage, IdentifyComponent, PublicRoute, Page, Post, News, Program, Category, ScrollToTop.\n\nFunctions:\n- Name: getLanguage\n  Description: Retrieves the current language of the application.\n  Parameters: None\n  Returns: Empty string ('')\n\n- Name: AppRouter\n  Description: Renders the main router component for the application.\n  Parameters: None\n  Returns: JSX element representing the router component.",
    "src/routers/PrivateRoute.js": "Description: This file defines a PrivateRoute component that is used for creating protected routes in the application.\n\nDependencies: \n- React: The main library for building user interfaces in the application.\n- react-redux: A library for connecting React components to the Redux store.\n- react-router-dom: A library for handling routing in React applications.\n- Header: A component that renders the header of the application.\n- Menu: A component that renders the menu of the application.\n\nFunctions:\n- Name: PrivateRoute\n  Description: A functional component that renders a Route component from react-router-dom. It checks if the user is authenticated or if there is a user ID stored in the local storage, and renders the Header, Menu, and the specified component if true. Otherwise, it redirects the user to the home page.\n  Parameters: \n    - isAuthenticated (bool) - Indicates if the user is authenticated.\n    - component (React component) - The component to be rendered if the user is authenticated.\n    - rest (object) - Additional props passed to the Route component.\n  Returns: A Route component that renders the specified component if the user is authenticated, or redirects to the home page if not.\n\n- Name: mapStateToProps\n  Description: A function that maps the state properties to the props of the PrivateRoute component.\n  Parameters: \n    - state (object) - The current state of the application.\n  Returns: An object containing the isAuthenticated property, which is derived from the auth.uid property in the state.\n\n- Name: default (exported)\n  Description: The default export of the file, which connects the mapStateToProps function to the PrivateRoute component using the connect function from react-redux.\n  Parameters: None\n  Returns: The connected PrivateRoute component.",
    "src/routers/PublicRoute.js": "Description: This file is a React component that represents a public route in the application.\n\nDependencies: React, react-router-dom, Header component, Footer component.\n\nFunctions:\n- Name: constructor\n  Description: Initializes the state of the component.\n  Parameters: props (object) - The props passed to the component.\n  Returns: None\n\n- Name: render\n  Description: Renders the public route component.\n  Parameters: None\n  Returns: JSX - The rendered component.\n\n- Name: handleChange\n  Description: Updates the search string in the component's state.\n  Parameters: value (string) - The new search string.\n  Returns: None\n\n- Name: withRouter\n  Description: Wraps the component with the withRouter higher-order component from react-router-dom.\n  Parameters: component (React component) - The component to be wrapped.\n  Returns: The wrapped component.",
    "src/routers/ScrollToTop.js": "Description: This file is responsible for scrolling the window to the top whenever the location changes in the application.\n\nDependencies: React, react-router\n\nFunctions:\n- Name: ScrollToTop\n  Description: A class component that scrolls the window to the top whenever the location changes.\n  Parameters: None\n  Returns: The children of the component.\n\n- Name: componentDidUpdate\n  Description: A lifecycle method that is called when the component updates.\n  Parameters: prevProps (object) - The previous props of the component.\n  Returns: None\n\n- Name: render\n  Description: A method that renders the component.\n  Parameters: None\n  Returns: The children of the component.",
    "src/views/FullWidth.js": "Description: This file is an empty file with no significant role in the application.\n\nDependencies: None\n\nFunctions: None",
    "src/views/NoSidebar.js": "Description: This file is a React component that represents a page without a sidebar in the application.\n\nDependencies: \n- React: The main library for building user interfaces in React.\n- react-router-dom: A library that provides routing capabilities for React applications.\n- MagnificPopup: A helper module for handling popups in the application.\n- WPCF7: A helper module for handling form submissions in the application.\n- PageHeader: A component that renders the header section of a page.\n- PostDocsLinks: A component that renders links to documentation related to a post.\n\nFunctions:\n- Name: componentDidMount\n  Description: Executes code after the component has been mounted to the DOM.\n  Parameters: None\n  Returns: None\n\n- Name: createMarkup\n  Description: Creates an object with HTML content to be rendered as dangerously set inner HTML.\n  Parameters: html (string) - The HTML content to be rendered.\n  Returns: Object - An object with the HTML content.\n\n- Name: handleNavigate\n  Description: Handles navigation when a link is clicked.\n  Parameters: e (event) - The click event.\n  Returns: None\n\n- Name: render\n  Description: Renders the component.\n  Parameters: None\n  Returns: JSX - The JSX representation of the component.",
    "src/views/Standard.js": "Description: This file is a React component that represents a standard page layout with a sidebar. It handles the rendering of the page header, content, and sidebar, as well as the navigation functionality.\n\nDependencies: \n- React: The main library for building user interfaces in React.\n- react-router-dom: A library for handling routing in React applications.\n- Sidebar: A custom component that represents the sidebar of the page.\n- MagnificPopup: A helper module for handling popups.\n- WPCF7: A helper module for handling WPCF7 forms.\n- PageHeader: A custom component that represents the header of the page.\n- PostDocsLinks: A custom component that represents links to post documents.\n\nFunctions:\n- renderWPCF7: Initializes and refills WPCF7 forms on the page.\n  Parameters: None\n  Returns: None\n\n- createMarkup: Creates a markup object for rendering HTML content.\n  Parameters: html (string) - The HTML content to be rendered.\n  Returns: Object - The markup object.\n\n- handleNavigate: Handles navigation when a link is clicked.\n  Parameters: e (event) - The click event.\n  Returns: None",
    "src/views/partials/ArticleSmall.js": "Description: This file is a React component that renders a small article with a thumbnail, title, and link.\n\nDependencies: React, react-router-dom\n\nFunctions:\n- Name: ArticleSmall\n  Description: Renders a small article component with a thumbnail, title, and link.\n  Parameters: props (object) - The properties passed to the component.\n  Returns: JSX - The rendered article component.",
    "src/views/partials/Breadcrumbs.js": "Description: This file is responsible for rendering and handling the breadcrumbs component in the application.\n\nDependencies: React, Component from 'react', WP_API from '../../data/Api', withRouter from 'react-router-dom'.\n\nFunctions:\n- Name: constructor\n  Description: Initializes the state of the Breadcrumbs component.\n  Parameters: props (object) - The props passed to the component.\n  Returns: None\n\n- Name: componentDidMount\n  Description: Executes after the component has been mounted and fetches the breadcrumbs data from the API.\n  Parameters: None\n  Returns: None\n\n- Name: createMarkup\n  Description: Creates a markup object with the provided HTML.\n  Parameters: html (string) - The HTML string to be converted to markup.\n  Returns: Object - The markup object.\n\n- Name: handleNavigate\n  Description: Handles the navigation when a link in the breadcrumbs is clicked.\n  Parameters: e (object) - The event object.\n  Returns: None\n\n- Name: render\n  Description: Renders the breadcrumbs component.\n  Parameters: None\n  Returns: JSX - The JSX code for the breadcrumbs component.",
    "src/views/partials/PageHeader.js": "Description: This file is responsible for rendering the page header, including the breadcrumbs, post title, and post date.\n\nDependencies: React, Breadcrumbs, PostDate\n\nFunctions:\n- Name: PageHeader\n  Description: Renders the page header with the breadcrumbs, post title, and post date.\n  Parameters: props (object) - The properties passed to the component.\n  Returns: JSX element - The rendered page header.",
    "src/views/partials/PostDate.js": "Description: This file is responsible for rendering the date and time of a post in a specific format.\n\nDependencies: This file has two dependencies: React and Moment. React is a JavaScript library for building user interfaces, while Moment is a JavaScript library for parsing, validating, manipulating, and formatting dates.\n\nFunctions:\n- Name: PostDate\n  Description: This function renders the date and time of a post in the specified format.\n  Parameters: props (object) - An object containing the date of the post.\n  Returns: JSX element - The formatted date and time of the post, or an empty div if the date is not provided.",
    "src/views/partials/PostDocsLinks.js": "Description: This file is a React component that renders a list of document links based on the props passed to it.\n\nDependencies: React, DOMParser\n\nFunctions:\n- Name: htmlDecode\n  Description: Decodes HTML entities in a given input string.\n  Parameters: input (string) - The input string containing HTML entities.\n  Returns: decodedText (string) - The decoded text without HTML entities.\n\n- Name: PostDocsLinks\n  Description: Renders a list of document links based on the props.docs object.\n  Parameters: props (object) - The props object containing the document data.\n  Returns: React component - The rendered list of document links.",
    "src/views/partials/RelatedPosts.js": "Description: This file is responsible for rendering a section of related posts on a webpage.\n\nDependencies: React, react-router-dom, WP_API, ArticleSmall\n\nFunctions:\n- Name: constructor\n  Description: Initializes the state of the component.\n  Parameters: props (object) - The properties passed to the component.\n  Returns: None\n\n- Name: componentDidMount\n  Description: Executes the getRelated function after the component has been mounted.\n  Parameters: None\n  Returns: None\n\n- Name: getRelated\n  Description: Retrieves related posts from the API and updates the state.\n  Parameters: None\n  Returns: None\n\n- Name: render\n  Description: Renders the related posts section.\n  Parameters: None\n  Returns: JSX element",
    "src/views/partials/Sidebar.js": "Description: This file is responsible for rendering and managing the sidebar component in the application.\n\nDependencies: \n- React: The main library for building user interfaces in the application.\n- Component: A class component from the React library.\n- WP_API: A module for making API requests to retrieve sidebar content.\n- useHistory: A hook from the react-router-dom library for accessing the browser history object.\n- withRouter: A higher-order component from the react-router-dom library for passing the history object to the Sidebar component.\n\nFunctions:\n- Name: constructor\n  Description: Initializes the state of the Sidebar component.\n  Parameters: props (object) - The props passed to the Sidebar component.\n  Returns: None\n\n- Name: componentWillMount\n  Description: Executes before the component is mounted and retrieves the sidebar content from the API.\n  Parameters: None\n  Returns: None\n\n- Name: createMarkup\n  Description: Creates a markup object with the given HTML content.\n  Parameters: html (string) - The HTML content to be rendered.\n  Returns: Object - The markup object.\n\n- Name: handleNavigate\n  Description: Handles the navigation when a link in the sidebar is clicked.\n  Parameters: e (object) - The event object.\n  Returns: None\n\n- Name: render\n  Description: Renders the Sidebar component.\n  Parameters: None\n  Returns: JSX - The JSX code representing the Sidebar component.",
    "webpack.config.js": "Description: This file is responsible for configuring and exporting the webpack configuration object for the application.\nDependencies: path, webpack, ExtractTextPlugin, dotenv, babel-polyfill, babel-loader, css-loader, sass-loader, webpack.DefinePlugin, webpack-dev-server\nFunctions:\n- Name: module.exports\n  Description: Configures and exports the webpack configuration object.\n  Parameters: env (string) - The environment in which the application is running.\n  Returns: Object - The webpack configuration object."
}